<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--指定要扫描的包，这个包下的所有注解都会生效-->
    <context:component-scan base-package="com.lzx"></context:component-scan>
    <!--开启注解的支持-->
    <context:annotation-config/>

    <bean id="userService" class="com.lzx.service.UserServiceImpl"/>
    <bean id="log" class="com.lzx.Log.Log"/>
    <bean id="afterLog" class="com.lzx.Log.AfterLog"/>

    <!--方式1：使用原生的spring api接口-->
    <!--需要导入aop的约束-->
    <!--<aop:config>
        &lt;!&ndash;切入点&ndash;&gt;
        <aop:pointcut id="pointcut" expression="execution(* com.lzx.service.UserServiceImpl.*(..))"/>
        &lt;!&ndash;执行环绕&ndash;&gt;
        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>
        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>
    </aop:config>-->

    <bean id="diy" class="com.lzx.diy.DiyPointCut"/>

    <!--<aop:config>
        <aop:aspect ref="diy">
            &lt;!&ndash;切入点&ndash;&gt;
            <aop:pointcut id="point" expression="execution(* com.lzx.service.UserServiceImpl.*(..))"/>
            &lt;!&ndash;通知&ndash;&gt;
            <aop:before method="before" pointcut-ref="point"/>
            <aop:after method="after" pointcut-ref="point"/>
        </aop:aspect>
    </aop:config>-->

    <bean id="anno" class="com.lzx.diy.AnnotationPointCut"/>
    <!--开启注解支持！-->
    <aop:aspectj-autoproxy/>

</beans>